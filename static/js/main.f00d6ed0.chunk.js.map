{"version":3,"sources":["pages/question/data.js","pages/question/Paginate.js","pages/question/NextButton.js","pages/question/PreviousButton.js","pages/question/CheckAnswer.js","pages/question/SendData.js","pages/question/SubmitButton.js","pages/question/MyTimer.js","pages/question/Question.js","App.js","index.js"],"names":["isSubmitted","timeLeft","data","id","question","visited","answered","options","option","isSelected","isCorrect","Paginate","questions","itemsPerPage","paginate","pageNumbers","setVisited","i","Math","ceil","length","push","className","map","number","onClick","NextButon","pageNumber","totalQues","PreviousButton","setPageNumber","CheckAnswer","result","j","SendData","answer_data","href","SubmitButton","submitButtonFunction","useState","submitButtonText","setsubmitButtonText","submitButtonClicked","setSubmitButtonClicked","useEffect","MyTimer","expiryTimestamp","useTimer","onExpire","alert","seconds","minutes","hours","isRunning","start","pause","resume","restart","style","textAlign","fontSize","backgroundColor","Question","console","log","savedAnswer","visitedQuestion","flag","setFlag","questionPaper","pagesVisited","displayQuestions","slice","type","name","value","onChange","option_id","p","handleChange","checked","setTimeLeft","time","Date","setSeconds","getSeconds","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f00d6ed0.chunk.js","sourcesContent":["\r\n\r\nexport const isSubmitted={\r\n    isSubmitted:false,\r\n    timeLeft:300 //sec\r\n}\r\n\r\nconst data=[\r\n\r\n   {\r\n        id:1,\r\n        question:\"What is the capital of India?\",\r\n        visited:false,\r\n        answered:false,\r\n        \r\n        options:[\r\n            {\r\n                id:1,\r\n                option:\"New Delhi\",\r\n                isSelected:false,\r\n                isCorrect:true\r\n            },\r\n            {\r\n                id:2,\r\n                option:\"Mumbai\",\r\n                isSelected:false,\r\n                isCorrect:false\r\n            },\r\n            {\r\n                id:3,\r\n                option:\"Chennai\",\r\n                isSelected:false,\r\n                isCorrect:false\r\n            }\r\n\r\n        ]\r\n\r\n   } ,\r\n   {\r\n        id:2,\r\n        visited:false,\r\n        answered:false,\r\n        question:\"What is the capital of USA?\",\r\n        options:[\r\n            {\r\n                id:1,\r\n                option:\"New Delhi\",\r\n                isSelected:false,\r\n                isCorrect:false\r\n            },\r\n            {\r\n                id:2,\r\n                option:\"Mumbai\",\r\n                isSelected:false,\r\n                isCorrect:false\r\n            },\r\n            {\r\n                id:3,\r\n                option:\"New York\",\r\n                isSelected:false,\r\n                isCorrect:true\r\n            \r\n            } \r\n        ]\r\n    },\r\n\r\n    {\r\n        id:3,\r\n        visited:false,\r\n        answered:false,\r\n        question:\"What is the capital of UK?\",\r\n        \r\n        options:[\r\n            {\r\n                id:1,\r\n                option:\"New Delhi\",\r\n                isSelected:false,\r\n                isCorrect:false \r\n            },\r\n            {\r\n                id:2,\r\n                option:\"London\",\r\n                isSelected:false,\r\n                isCorrect:true\r\n            },\r\n            {\r\n                id:3,\r\n                option:\"New York\",\r\n                isSelected:false,\r\n                isCorrect:false\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id:4,\r\n        visited:false,\r\n        answered:false,\r\n        question:\"What is the capital of Australia?\",\r\n        options:[\r\n            {\r\n                id:1,\r\n                option:\"New Delhi\",\r\n                isSelected:false,\r\n                isCorrect:false\r\n            },\r\n            {\r\n                id:2,\r\n                option:\"Sydney\",\r\n                isSelected:false,\r\n                isCorrect:true\r\n            },\r\n            {\r\n                id:3,\r\n                option:\"Melbourne\",\r\n                isSelected:false,\r\n                isCorrect:false\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id:5,\r\n        visited:false,\r\n        answered:false,\r\n        question:\"What is the capital of Canada?\",\r\n        options:[\r\n            {\r\n                id:1,\r\n                option:\"New Delhi\",\r\n                isSelected:false,\r\n                isCorrect:false\r\n            },\r\n\r\n            {\r\n                id:2,\r\n                option:\"Ottawa\",\r\n                isSelected:false,\r\n                isCorrect:true\r\n            },\r\n            {\r\n                id:3,\r\n                option:\"Toronto\",\r\n                isSelected:false,\r\n                isCorrect:false\r\n            }\r\n        ]   \r\n    },\r\n    {\r\n        id:6,\r\n        visited:false,\r\n        answered:false,\r\n        question:\"What is the capital of Germany?\",\r\n        options:[\r\n            {\r\n                id:1,\r\n                option:\"New Delhi\",\r\n                isSelected:false,\r\n                isCorrect:false\r\n            },\r\n            {\r\n                id:2,\r\n                option:\"Berlin\",\r\n                isSelected:false,\r\n                isCorrect:true\r\n            },\r\n            {\r\n                id:3,\r\n                option:\"Munich\",\r\n                isSelected:false,\r\n                isCorrect:false\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id:7,\r\n        visited:false,\r\n        answered:false,\r\n        question:\"What is the capital of France?\",\r\n        options:[\r\n            {\r\n                id:1,\r\n                option:\"New Delhi\",\r\n                isSelected:false,\r\n                isCorrect:false\r\n            },\r\n            {\r\n                id:2,\r\n                option:\"Paris\",\r\n                isSelected:false,\r\n                isCorrect:true\r\n            },\r\n            {\r\n                id:3,\r\n                option:\"Lyon\",\r\n                isSelected:false,\r\n                isCorrect:false\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id:8,\r\n        visited:false,\r\n        answered:false,\r\n        question:\"What is the capital of Italy?\",\r\n        options:[\r\n            {\r\n                id:1,\r\n                option:\"New Delhi\",\r\n                isSelected:false,\r\n                isCorrect:false\r\n            },\r\n            {\r\n                id:2,\r\n                option:\"Rome\",\r\n                isSelected:false,\r\n                isCorrect:true\r\n            },\r\n            {\r\n                id:3,\r\n                option:\"Milan\",\r\n                isSelected:false,\r\n                isCorrect:false\r\n            }\r\n        ]\r\n    },\r\n    \r\n   \r\n]\r\n\r\nexport default data;","import React from 'react'\r\nimport \"./question.css\"\r\nexport default function Paginate({questions, itemsPerPage, paginate,setVisited}) {\r\n\r\n    const pageNumbers = [];\r\n    for (let i = 0; i < Math.ceil(questions.length / itemsPerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n    // console.log(questions[0].visited)\r\n   \r\n    return (\r\n        <div>\r\n\r\n            <ul className=\"page-button-contrainer\">\r\n                { pageNumbers.map(number => (\r\n                    <li key={number} className=\"page-item\">\r\n                       \r\n                        <button \r\n                            className={questions[number].visited && questions[number].answered ?\r\n                                        \"page-link-answered\":questions[number].visited?\r\n                                        \"page-link-visited\":\"page-link\"\r\n                                        } \r\n                                onClick={() =>\r\n                                     paginate(number)\r\n                                     \r\n                                     }> \r\n                            {number+1}\r\n                        </button>\r\n                        \r\n                    </li>\r\n                ))} \r\n                \r\n                  \r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NextButon({ pageNumber,totalQues,paginate}) {\r\n    return (\r\n        <div>\r\n            <button className={pageNumber<totalQues-1?\"page-link\":\"disabled\"} \r\n                    onClick={() => {\r\n                        if(pageNumber<totalQues-1){\r\n                            paginate(pageNumber + 1)\r\n                        }\r\n            }}>next</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Paginate from './Paginate'\r\n\r\nexport default function PreviousButton({pageNumber,setPageNumber,paginate}) {\r\n    return (\r\n        <div>\r\n            <button className={pageNumber>0?\"page-link\":\"disabled\"} \r\n                    onClick={() => {\r\n                        if(pageNumber>0){\r\n                            paginate(pageNumber - 1)\r\n                        }\r\n            }}>Previous</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport  data  from \"./data\"\r\nexport default function CheckAnswer() {\r\n\r\n    \r\n    let result = 0;\r\n    for (let i=0;i<data.length;i++){\r\n        for (let j=0;j<data[i].options.length;j++){\r\n            if(data[i].options[j].isCorrect && data[i].options[j].isSelected)\r\n            {\r\n                result ++\r\n            }\r\n           \r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className=\"container\"> \r\n            <h3> Your score is : {result}</h3>\r\n            <h4>Wrong answer:{data.length -result}</h4>\r\n            <hr/>\r\n            \r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n","\r\nimport React from 'react'\r\nimport CheckAnswer from './CheckAnswer';\r\n\r\nexport default function SendData(data) {\r\n    // console.log(data)\r\n    //to save dta to local pc\r\n    // const handleSaveToPC = (jsonData,filename) => {\r\n    //     const fileData = JSON.stringify(jsonData);\r\n    //     const blob = new Blob([fileData], {type: \"text/plain\"});\r\n    //     const url = URL.createObjectURL(blob);\r\n    //     const link = document.createElement('a');\r\n    //     link.download = `${filename}.js`;\r\n    //     link.href = url;\r\n    //     link.click();\r\n    //   }\r\n\r\n      \r\n    return (\r\n        <div>\r\n            \r\n            <h1>\r\n                {\r\n                   <CheckAnswer answer_data={data}/>\r\n                }\r\n            </h1>\r\n            <button className=\"show-answer\">\r\n                <a href=\"/show-answer/\">\r\n                Show Answer  Script\r\n                </a></button>\r\n                {/* {handleSaveToPC(data,\"mydata\")} */}\r\n            {/* {\r\n                data.forEach(question=>{\r\n                    <h1 key={question.id}>\r\n                            {question.question}\r\n                    </h1>\r\n                })\r\n            } */}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {useState,useEffect} from 'react'\r\nimport Question from './Question';\r\nimport SendData from \"./SendData\"\r\nimport { isSubmitted } from './data';\r\n\r\nexport default function SubmitButton(data,submitButtonFunction) {\r\n    const [submitButtonText,setsubmitButtonText]=useState(\"Submit\")\r\n    const [submitButtonClicked,setSubmitButtonClicked]=useState(isSubmitted.isSubmitted);\r\n    useEffect(()=>{\r\n        if (isSubmitted.isSubmitted){\r\n            setsubmitButtonText(\"Submitted\")\r\n            setSubmitButtonClicked(true)\r\n        }\r\n        },[submitButtonClicked])\r\n        \r\n    \r\n    return (\r\n        <div>\r\n            \r\n            <button className={submitButtonClicked?\"disabled\":\"page-link\" }\r\n                    onClick={()=>(\r\n                        \r\n                        setSubmitButtonClicked(true),\r\n                        isSubmitted.isSubmitted=true,\r\n                        setsubmitButtonText(\"Submitted\"),\r\n                        submitButtonFunction\r\n                        \r\n                                \r\n                                )}\r\n            >{submitButtonText}</button>\r\n\r\n            {submitButtonClicked?\r\n                \r\n                <SendData data={data}/>:null}\r\n                \r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useTimer } from 'react-timer-hook';\r\nimport { isSubmitted } from './data';\r\n// import { useEffect} from 'react';\r\n// import CheckAnswer from './CheckAnswer';\r\nexport default function MyTimer({ expiryTimestamp }) {\r\n    \r\n  const {\r\n    seconds,\r\n    minutes,\r\n    hours,\r\n    isRunning,\r\n    start,\r\n    pause,\r\n    resume,\r\n    restart,\r\n  } = useTimer({ expiryTimestamp, onExpire: () => \r\n                       ( alert(\"Times up\"),\r\n                        isSubmitted.isSubmitted=true,\r\n                        isSubmitted.timeLeft=0\r\n                        \r\n                        )\r\n\r\n});\r\n\r\n\r\n    \r\n  \r\n    \r\n    \r\n\r\n\r\n       \r\n        \r\n  return (\r\n    <div style={{textAlign: 'center'}}>\r\n     \r\n      <div style={{fontSize: '30px',backgroundColor:\"rgba(213,213,90)\"}}>\r\n       <span>{hours<10?\"0\" +hours:hours}</span>:\r\n       <span>{minutes<10?\"0\" +minutes:minutes}</span>:\r\n       <span>{seconds<10?\"0\" +seconds:seconds}</span>\r\n      </div>\r\n      \r\n      {/* <button onClick={start}>Start</button>\r\n      <button onClick={pause}>Pause</button>\r\n      <button onClick={resume}>Resume</button>\r\n      <button onClick={() => {\r\n        // Restarts to 5 minutes timer\r\n        const time = new Date();\r\n        time.setSeconds(time.getSeconds() + 300);\r\n        restart(time)\r\n      }}>Restart</button> */}\r\n    </div>\r\n  );\r\n}","\r\nimport data from './data'\r\nimport React, { useEffect, useState } from 'react';\r\nimport Paginate from './Paginate';\r\nimport ReactPaginate from 'react-paginate';\r\nimport NextButton from './NextButton';\r\nimport PreviousButton from './PreviousButton';\r\nimport \"./question.css\"\r\nimport { isSubmitted } from './data';\r\nimport SubmitButton from './SubmitButton';\r\nimport MyTimer from './MyTimer';\r\n// Example items, to simulate fetching from another resources.\r\n// const items = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\r\n\r\n    \r\n\r\nfunction Question({ itemsPerPage }) {\r\n    console.log(isSubmitted.isSubmitted)\r\n    let savedAnswer=0;\r\n   let visitedQuestion=0;\r\n    \r\n    const [questions, setQuestions] = useState(data);\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n \r\n    const [flag, setFlag] = useState(false);\r\n\r\n\r\n  const [submitButtonClicked,setSubmitButtonClicked]=useState(false)\r\n    \r\n    const paginate = (pageNumber) => {\r\n        setPageNumber(pageNumber);\r\n        setFlag(true);\r\n        questions[pageNumber].visited = true;\r\n       \r\n        // setVisitedQuestion(...visitedQuestion + pageNumber)\r\n    }\r\n    // const setVisited = (id) => {\r\n    //     questions[id].visited = true;\r\n    // }\r\n    if(!isSubmitted.isSubmitted){\r\n        for (let i=0;i<questions.length;i++){\r\n        \r\n                if( data[i].visited)\r\n                {\r\n                    visitedQuestion ++\r\n                }\r\n                if(data[i].answered){\r\n                    savedAnswer ++\r\n                }\r\n            \r\n        }\r\n    }\r\n\r\n    // const remainingTime=()=>{\r\n    //     return new Date().toLocaleTimeString()\r\n    // }\r\n\r\n    const totalQues=questions.length;\r\n    const handleChange=(option_id,question)=>{\r\n        question.options.map(p => {\r\n                if(p.id === option_id){\r\n                    p.isSelected = true;\r\n                    setFlag(!flag);\r\n                }\r\n                else{\r\n                    p.isSelected = false;\r\n                }\r\n        })   \r\n        \r\n        question.answered=true;       \r\n     \r\n}\r\n        const questionPaper=data;\r\n\r\n  \r\n   \r\n    // const [selectedAnswers, setSelectedAnswers] = useState();\r\n\r\n    const questionsPerPage = 1;\r\n    const pagesVisited=pageNumber * questionsPerPage;\r\n     \r\n\r\n    const displayQuestions=questionPaper\r\n    .slice(pagesVisited, pagesVisited + questionsPerPage) \r\n    .map(question => {\r\n        return (\r\n        <ul key={question.id}>\r\n            <h2><li>({question.id}){question.question}</li></h2>\r\n            <div className={isSubmitted.isSubmitted?\"radio radio-disabled\":\"radio\"}>\r\n                    {question.options.map(option => {\r\n                                return (\r\n                                <div key={option.id} className=\"option\">\r\n                                    <label className=\"form-control\">\r\n                                    <input type=\"radio\"  \r\n                                            className={isSubmitted.isSubmitted?\"radio-disabled\":null}\r\n                                            name={question.id} \r\n                                            value={option.id} \r\n                                            onChange={()=>{\r\n                                                if(!isSubmitted.isSubmitted){ \r\n                                                    handleChange(option.id,question)\r\n                                                }}}\r\n                                            checked={option.isSelected}\r\n                                           \r\n                                            />\r\n                                    {option.option}</label>\r\n                                </div>\r\n                                )\r\n                            })}\r\n            </div>\r\n        </ul>\r\n        )})\r\n    \r\n        const [timeLeft,setTimeLeft]=useState(isSubmitted.timeLeft)\r\n        const submitButtonFunction=()=>{\r\n            setTimeLeft(0)\r\n        }\r\n        const time = new Date();\r\n        time.setSeconds(time.getSeconds() + timeLeft); // 5 sec timer\r\n\r\n        useEffect(() => {\r\n            console.log(\"Cahnge detected\")\r\n            console.log(flag)\r\n           \r\n        \r\n        }, [questionPaper,flag,isSubmitted,timeLeft]);\r\n    \r\n    \r\n\r\n  return (\r\n    <>\r\n        <div className=\"container\"> \r\n            {displayQuestions}\r\n            <div>\r\n                {timeLeft>0?\r\n                    <MyTimer expiryTimestamp={time} />:<h3>Exam Submitted</h3>}\r\n            </div>\r\n        </div>\r\n\r\n  \r\n        <div className=\"container\"> \r\n            <Paginate   questions={questionPaper} \r\n                        itemsPerPage={questionsPerPage} \r\n                        paginate={paginate}\r\n                        />\r\n        </div>\r\n\r\n        <div className=\" bottom\">\r\n            <PreviousButton \r\n                pageNumber={pageNumber}\r\n                setPageNumber={setPageNumber}\r\n                paginate={paginate}\r\n\r\n            />\r\n            <NextButton \r\n                pageNumber={pageNumber}\r\n                totalQues={totalQues}\r\n                paginate={paginate}\r\n            />\r\n    </div>\r\n       \r\n    <div className=\" bottom\">\r\n            <h2>\r\n                Saved Answer : {savedAnswer}\r\n                <br/>\r\n                Visited :{visitedQuestion }\r\n            </h2>\r\n        </div>\r\n        <div className=\" bottom\">\r\n        <SubmitButton data={questions} submitButtonFunction={submitButtonFunction}/>\r\n        </div>\r\n        \r\n    </>\r\n  );\r\n}\r\n\r\nexport default Question;","import { BrowserRouter as Router, Route } from \"react-router-dom\";\n// import Login from './pages/login/Login';\nimport Question from './pages/question/Question';\n// import SendData from \"./pages/question/SendData\"\nimport './App.css';\nimport CheckAnswer from \"./pages/question/CheckAnswer\";\n// import { MyComponent } from \"./pages/farmer_motion/MyComponent\";\n\nfunction App() {\n  return (\n    <Router>\n        <div>\n          <Route exact path=\"/\" component={Question} />\n          <Route path=\"/examination-system\" component={Question}/>\n          <Route path=\"examination-system/show-answer\" component={CheckAnswer}/>\n        </div>\n\n    </Router>\n\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {HashRouter  } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n\n  <HashRouter>\n      <App />\n    </HashRouter>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}